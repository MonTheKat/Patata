package Presentacio;

import javax.swing.JOptionPane;

/**
 * @autor Joan
 * @dataCreación 23/11/2014
 * @dataÚltimaModificación 5/12/2014
 */
public class VistaGestionReuniones extends javax.swing.JPanel {

    private CtrlPresentacio cPres;

    /**
     * Creates new form VistaGestionMapas
     */
    public VistaGestionReuniones() {
        initComponents();
    }

    /**
     * Creates new form VistaGestionMapas
     */
    public VistaGestionReuniones(CtrlPresentacio cpres) {
        this.cPres = cpres;
        initComponents();
        nuevaReunPanel.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        groupCriterio = new javax.swing.ButtonGroup();
        groupAlgoritmo = new javax.swing.ButtonGroup();
        reunActualPanel = new javax.swing.JPanel();
        nuevaReunion = new javax.swing.JButton();
        labelCurrName = new javax.swing.JLabel();
        labelCurrN = new javax.swing.JLabel();
        labelCurrOrig = new javax.swing.JLabel();
        labelCurrDest = new javax.swing.JLabel();
        labelCurrCrit = new javax.swing.JLabel();
        labelCurrAlg = new javax.swing.JLabel();
        currName = new javax.swing.JLabel();
        currOrig = new javax.swing.JLabel();
        currCrit = new javax.swing.JLabel();
        currN = new javax.swing.JLabel();
        currDest = new javax.swing.JLabel();
        currAlg = new javax.swing.JLabel();
        nuevaReunPanel = new javax.swing.JPanel();
        labelNewName = new javax.swing.JLabel();
        labelNewOrig = new javax.swing.JLabel();
        labelNewN = new javax.swing.JLabel();
        labelNewDest = new javax.swing.JLabel();
        labelNewCrit = new javax.swing.JLabel();
        labelNewAlg = new javax.swing.JLabel();
        fieldName = new javax.swing.JTextField();
        fieldOrig = new javax.swing.JTextField();
        fieldN = new javax.swing.JTextField();
        fieldDest = new javax.swing.JTextField();
        radioTiempo = new javax.swing.JRadioButton();
        radioKilometros = new javax.swing.JRadioButton();
        radioCosteBillete = new javax.swing.JRadioButton();
        radioFF = new javax.swing.JRadioButton();
        radioEK = new javax.swing.JRadioButton();
        radioFFD = new javax.swing.JRadioButton();
        doneButton = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        nuevaReunion.setText("Crear una nueva reunión");
        nuevaReunion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevaReunionActionPerformed(evt);
            }
        });

        labelCurrName.setText("Nombre de la reunión:");

        labelCurrN.setText("Número de agentes:");

        labelCurrOrig.setText("Pueblo origen (ID, nombre):");

        labelCurrDest.setText("Pueblo destino (ID, nombre):");

        labelCurrCrit.setText("Criterio de obtención de rutas:");

        labelCurrAlg.setText("Algoritmo:");

        javax.swing.GroupLayout reunActualPanelLayout = new javax.swing.GroupLayout(reunActualPanel);
        reunActualPanel.setLayout(reunActualPanelLayout);
        reunActualPanelLayout.setHorizontalGroup(
            reunActualPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, reunActualPanelLayout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(reunActualPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelCurrOrig)
                    .addComponent(labelCurrName)
                    .addComponent(labelCurrCrit))
                .addGap(18, 18, 18)
                .addGroup(reunActualPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(currName)
                    .addComponent(currOrig)
                    .addComponent(currCrit))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 280, Short.MAX_VALUE)
                .addGroup(reunActualPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelCurrDest)
                    .addComponent(labelCurrAlg)
                    .addComponent(labelCurrN))
                .addGap(18, 18, 18)
                .addGroup(reunActualPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(currDest)
                    .addComponent(currN)
                    .addComponent(currAlg))
                .addGap(175, 175, 175))
            .addGroup(reunActualPanelLayout.createSequentialGroup()
                .addGap(354, 354, 354)
                .addComponent(nuevaReunion)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        reunActualPanelLayout.setVerticalGroup(
            reunActualPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, reunActualPanelLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(reunActualPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCurrName)
                    .addComponent(labelCurrN)
                    .addComponent(currName)
                    .addComponent(currN))
                .addGap(18, 18, 18)
                .addGroup(reunActualPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCurrDest)
                    .addComponent(labelCurrOrig)
                    .addComponent(currOrig)
                    .addComponent(currDest))
                .addGap(50, 50, 50)
                .addGroup(reunActualPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCurrCrit)
                    .addComponent(labelCurrAlg)
                    .addComponent(currCrit)
                    .addComponent(currAlg))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 80, Short.MAX_VALUE)
                .addComponent(nuevaReunion)
                .addGap(18, 18, 18))
        );

        add(reunActualPanel, java.awt.BorderLayout.PAGE_START);

        labelNewName.setText("Nombre de la reunión:");

        labelNewOrig.setText("ID pueblo origen:");

        labelNewN.setText("Número de agentes:");

        labelNewDest.setText("ID pueblo destino:");

        labelNewCrit.setText("Criterio de obtención de rutas:");

        labelNewAlg.setText("Algoritmo:");

        fieldName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldNameActionPerformed(evt);
            }
        });

        fieldN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldNActionPerformed(evt);
            }
        });

        groupCriterio.add(radioTiempo);
        radioTiempo.setText("Tiempo");
        radioTiempo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioTiempoActionPerformed(evt);
            }
        });

        groupCriterio.add(radioKilometros);
        radioKilometros.setText("Distancia");
        radioKilometros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioKilometrosActionPerformed(evt);
            }
        });

        groupCriterio.add(radioCosteBillete);
        radioCosteBillete.setText("Coste del Billete");

        groupAlgoritmo.add(radioFF);
        radioFF.setText("Ford Fulkerson");

        groupAlgoritmo.add(radioEK);
        radioEK.setText("Edmonds Karp");

        groupAlgoritmo.add(radioFFD);
        radioFFD.setText("Ford Fulkerson + Dijkstra");

        doneButton.setText("¡Hecho!");
        doneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout nuevaReunPanelLayout = new javax.swing.GroupLayout(nuevaReunPanel);
        nuevaReunPanel.setLayout(nuevaReunPanelLayout);
        nuevaReunPanelLayout.setHorizontalGroup(
            nuevaReunPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(nuevaReunPanelLayout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addGroup(nuevaReunPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(nuevaReunPanelLayout.createSequentialGroup()
                        .addGroup(nuevaReunPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(radioCosteBillete)
                            .addComponent(radioKilometros))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(nuevaReunPanelLayout.createSequentialGroup()
                        .addGroup(nuevaReunPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelNewCrit)
                            .addComponent(labelNewOrig)
                            .addComponent(labelNewName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(nuevaReunPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(fieldOrig, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                            .addComponent(fieldName))
                        .addGap(76, 76, 76)
                        .addGroup(nuevaReunPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, nuevaReunPanelLayout.createSequentialGroup()
                                .addComponent(radioFFD)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(doneButton)
                                .addGap(29, 29, 29))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, nuevaReunPanelLayout.createSequentialGroup()
                                .addGroup(nuevaReunPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(labelNewAlg, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(radioEK, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(radioFF, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, nuevaReunPanelLayout.createSequentialGroup()
                                        .addGroup(nuevaReunPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(labelNewDest)
                                            .addComponent(labelNewN))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(nuevaReunPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(fieldN, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                                            .addComponent(fieldDest))))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(nuevaReunPanelLayout.createSequentialGroup()
                        .addComponent(radioTiempo)
                        .addContainerGap(740, Short.MAX_VALUE))))
        );
        nuevaReunPanelLayout.setVerticalGroup(
            nuevaReunPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(nuevaReunPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(nuevaReunPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNewName)
                    .addComponent(labelNewN)
                    .addComponent(fieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fieldN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(nuevaReunPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNewOrig)
                    .addComponent(labelNewDest)
                    .addComponent(fieldOrig, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fieldDest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(nuevaReunPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNewCrit)
                    .addComponent(labelNewAlg))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(nuevaReunPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioTiempo)
                    .addComponent(radioFF))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(nuevaReunPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioKilometros)
                    .addComponent(radioEK))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(nuevaReunPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioCosteBillete)
                    .addComponent(radioFFD)
                    .addComponent(doneButton))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        add(nuevaReunPanel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void fieldNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldNameActionPerformed

    private void radioTiempoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioTiempoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioTiempoActionPerformed

    private void nuevaReunionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevaReunionActionPerformed
        boolean hayMapa = this.cPres.hayMapaCargado();
        if (hayMapa) {
            fieldName.setText(currName.getText());
            fieldN.setText(currN.getText());
            fieldOrig.setText(currOrig.getText());
            fieldDest.setText(currDest.getText());
            nuevaReunPanel.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Antes de crear una reunión tienes que crear un mapa");
        }
    }//GEN-LAST:event_nuevaReunionActionPerformed

    private void doneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneButtonActionPerformed
        int numPueblos = this.cPres.getNumPueblos();
        boolean nomValido = (fieldName.getText() != null);
        boolean Nvalido = (isNumeric(fieldN.getText()) && Integer.parseInt(fieldN.getText()) > 0);
        boolean origValido = (isNumeric(fieldOrig.getText()) && Integer.parseInt(fieldOrig.getText()) >= 0 && Integer.parseInt(fieldOrig.getText()) < numPueblos);
        boolean destValido = (isNumeric(fieldDest.getText()) && Integer.parseInt(fieldDest.getText()) >= 0 && Integer.parseInt(fieldDest.getText()) < numPueblos);
        boolean critValido = (radioTiempo.isSelected() || radioKilometros.isSelected() || radioCosteBillete.isSelected());
        boolean algValido = (radioFF.isSelected() || radioEK.isSelected() || radioFFD.isSelected());
        boolean algFF = radioFF.isSelected();
        if (!algFF) {
            if (origValido) {
                if (destValido) {
                    if (!fieldOrig.getText().equals(fieldDest.getText())) {
                        if (nomValido) {
                            if (Nvalido) {
                                if (critValido) {
                                    if (algValido) {
                                        String[] paramsNew = new String[6];
                                        //params[0]= codigo reunión
                                        //params[1]= número de agentes
                                        //params[2]= pueblo origen
                                        //params[3]= pueblo destino
                                        //params[4]= criterio
                                        //params[5]= algoritmo (FF, EK, FFD)
                                        paramsNew[0] = fieldName.getText();
                                        paramsNew[1] = fieldN.getText();
                                        paramsNew[2] = fieldOrig.getText();
                                        paramsNew[3] = fieldDest.getText();
                                        if (radioTiempo.isSelected()) {
                                            paramsNew[4] = "tiempo";
                                        } else if (radioKilometros.isSelected()) {
                                            paramsNew[4] = "kilometros";
                                        } else if (radioCosteBillete.isSelected()) {
                                            paramsNew[4] = "costeBillete";
                                        } else {
                                            System.out.println("Error amb els radiobuttoms de criterio");
                                        }
                                        if (radioFF.isSelected()) {
                                            paramsNew[5] = "FF";
                                        } else if (radioEK.isSelected()) {
                                            paramsNew[5] = "EK";
                                        } else if (radioFFD.isSelected()) {
                                            paramsNew[5] = "FFD";
                                        } else {
                                            System.out.println("Error amb els radiobuttoms de algoritme");
                                        }

                                        this.cPres.altaReunion(paramsNew);
                                        this.mostrarReunion();
                                        nuevaReunPanel.setVisible(false);
                                        this.cPres.resetResultados();
                                    } else {
                                        JOptionPane.showMessageDialog(null, "Por favor, escoge un algoritmo");
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(null, "Por favor, escoge un criterio");
                                }
                            } else {
                                JOptionPane.showMessageDialog(null, "El número de agentes tiene que ser un entero positivo");
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "Por favor, introduce nombre para la reunión");
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "El pueblo origen y el de destino no pueden ser el mismo");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Por favor, introduce un pueblo de destino válido");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Por favor, introduce un pueblo de origen válido");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Lo sentimos. La opción de Ford Fulkerson no está disponible");
        }
    }//GEN-LAST:event_doneButtonActionPerformed
    private void fieldNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldNActionPerformed

    private void radioKilometrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioKilometrosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioKilometrosActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel currAlg;
    private javax.swing.JLabel currCrit;
    private javax.swing.JLabel currDest;
    private javax.swing.JLabel currN;
    private javax.swing.JLabel currName;
    private javax.swing.JLabel currOrig;
    private javax.swing.JButton doneButton;
    private javax.swing.JTextField fieldDest;
    private javax.swing.JTextField fieldN;
    private javax.swing.JTextField fieldName;
    private javax.swing.JTextField fieldOrig;
    private javax.swing.ButtonGroup groupAlgoritmo;
    private javax.swing.ButtonGroup groupCriterio;
    private javax.swing.JLabel labelCurrAlg;
    private javax.swing.JLabel labelCurrCrit;
    private javax.swing.JLabel labelCurrDest;
    private javax.swing.JLabel labelCurrN;
    private javax.swing.JLabel labelCurrName;
    private javax.swing.JLabel labelCurrOrig;
    private javax.swing.JLabel labelNewAlg;
    private javax.swing.JLabel labelNewCrit;
    private javax.swing.JLabel labelNewDest;
    private javax.swing.JLabel labelNewN;
    private javax.swing.JLabel labelNewName;
    private javax.swing.JLabel labelNewOrig;
    private javax.swing.JPanel nuevaReunPanel;
    private javax.swing.JButton nuevaReunion;
    private javax.swing.JRadioButton radioCosteBillete;
    private javax.swing.JRadioButton radioEK;
    private javax.swing.JRadioButton radioFF;
    private javax.swing.JRadioButton radioFFD;
    private javax.swing.JRadioButton radioKilometros;
    private javax.swing.JRadioButton radioTiempo;
    private javax.swing.JPanel reunActualPanel;
    // End of variables declaration//GEN-END:variables

    public void mostrarReunion() {
        boolean hayReunion = this.cPres.hayReunion();
        if (hayReunion) {
            String[] paramsR = this.cPres.getParamsReunion();
            currName.setText(paramsR[0]);
            currN.setText(paramsR[1]);
            currOrig.setText(paramsR[2]);
            currDest.setText(paramsR[3]);
            switch (paramsR[4]) {
                case "FF":
                    currAlg.setText("Ford Fulkerson");
                    break;
                case "EK":
                    currAlg.setText("Edmonds Karp");
                    break;
                case "FFD":
                    currAlg.setText("Ford Fulkerson + Dijkstra");
                    break;
                default:
                    currAlg.setText("Error");
                    break;
            }
            currCrit.setText(paramsR[5]);
        }
    }

    private boolean isNumeric(String str) {
        return (str.matches("[+-]?\\d*(\\.\\d+)?") && str.equals("") == false);
    }

    void borrarParamsReunion() {
        currAlg.setText("");
        currCrit.setText("");
        currDest.setText("");
        currN.setText("");
        currName.setText("");
        currOrig.setText("");
    }
}
