package Presentacio;

import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 * @autor Laura
 * @dataCreación 3/12/2014
 * @dataÚltimaModificación 7/12/2014
 */
public class VistaResultados extends javax.swing.JPanel {

    private CtrlPresentacio cPres;
    private String[][] result;

    /**
     * Creates new form VistaGestionMapas
     */
    public VistaResultados() {
        initComponents();
    }

    /**
     * Creates new form VistaGestionMapas
     */
    public VistaResultados(CtrlPresentacio cpres) {
        this.cPres = cpres;
        initComponents();
        this.guardarButton.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        opcionesPanel = new javax.swing.JPanel();
        guardarButton = new javax.swing.JButton();
        importarButton = new javax.swing.JButton();
        displayPanel = new javax.swing.JPanel();
        nombreReunion = new javax.swing.JLabel();
        resultScroll = new javax.swing.JScrollPane();
        resultTextArea = new javax.swing.JTextArea();

        setLayout(new java.awt.BorderLayout());

        guardarButton.setText("Guardar Resultados");
        guardarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarButtonActionPerformed(evt);
            }
        });

        importarButton.setText("Resultados Guardados");
        importarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importarButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout opcionesPanelLayout = new javax.swing.GroupLayout(opcionesPanel);
        opcionesPanel.setLayout(opcionesPanelLayout);
        opcionesPanelLayout.setHorizontalGroup(
            opcionesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(opcionesPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(opcionesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(guardarButton)
                    .addComponent(importarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        opcionesPanelLayout.setVerticalGroup(
            opcionesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(opcionesPanelLayout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addComponent(guardarButton)
                .addGap(18, 18, 18)
                .addComponent(importarButton)
                .addContainerGap(387, Short.MAX_VALUE))
        );

        add(opcionesPanel, java.awt.BorderLayout.LINE_START);

        nombreReunion.setText("Nombre de la reunión");

        resultTextArea.setColumns(20);
        resultTextArea.setRows(5);
        resultTextArea.setFocusable(false);
        resultScroll.setViewportView(resultTextArea);

        javax.swing.GroupLayout displayPanelLayout = new javax.swing.GroupLayout(displayPanel);
        displayPanel.setLayout(displayPanelLayout);
        displayPanelLayout.setHorizontalGroup(
            displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(resultScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 826, Short.MAX_VALUE)
                    .addGroup(displayPanelLayout.createSequentialGroup()
                        .addComponent(nombreReunion)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        displayPanelLayout.setVerticalGroup(
            displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayPanelLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(nombreReunion)
                .addGap(18, 18, 18)
                .addComponent(resultScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 477, Short.MAX_VALUE)
                .addContainerGap())
        );

        add(displayPanel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void guardarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarButtonActionPerformed
        try {
            String dir;
            JFileChooser chooser;
            chooser = new JFileChooser();
            chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            chooser.setAcceptAllFileFilterUsed(false);

            if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
                dir = chooser.getSelectedFile().getAbsolutePath();
                this.cPres.exportarResultados(dir + "/" + this.cPres.getNombreReunion() + "R", result);
                JOptionPane.showMessageDialog(null, "El resultado se ha exportado correctamente en el fichero " + this.cPres.getNombreReunion() + "R");
            }
        } catch (IOException ex) {
            Logger.getLogger(VistaResultados.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_guardarButtonActionPerformed

    private void importarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importarButtonActionPerformed
        try {
            JFileChooser fileResult = new JFileChooser();
            if (fileResult.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
                File resultF = fileResult.getSelectedFile();
                String pathR = resultF.getAbsolutePath();
                String nombreR;
                String txt = "";

                int indiceLetra = pathR.length() - 1;
                char letra = pathR.charAt(indiceLetra);
                if (letra == 'R') {
                    nombreR = pathR.substring(0, pathR.length() - 1);
                    String[][] resultMatrix = this.cPres.importarMatrizResultados(pathR);
                    for (int i = 0; i < resultMatrix.length; i++) {
                        boolean first = true;
                        txt += " ";
                        txt += resultMatrix[i][0];
                        txt += ": ";
                        for (int j = 1; j < resultMatrix[i].length; j++) {
                            if (!first) {
                                txt += "--> ";
                            }
                            txt += resultMatrix[i][j];
                            txt += " ";
                            first = false;
                        }
                        txt += "\n\n";
                    }
                    JOptionPane.showMessageDialog(null,
                            txt,
                            nombreR,
                            JOptionPane.PLAIN_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, "El fichero seleccionado no corresponde al resultado de una simulación");
                }
            }
        } catch (IOException ex) {
            Logger.getLogger(VistaResultados.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_importarButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel displayPanel;
    private javax.swing.JButton guardarButton;
    private javax.swing.JButton importarButton;
    private javax.swing.JLabel nombreReunion;
    private javax.swing.JPanel opcionesPanel;
    private javax.swing.JScrollPane resultScroll;
    private javax.swing.JTextArea resultTextArea;
    // End of variables declaration//GEN-END:variables

    public void mostrarResultados() {
        boolean reunionHecha = this.cPres.getReunionHecha();
        if (reunionHecha) {
            boolean haySolucion = this.cPres.haySolucion();
            if (haySolucion) {
                this.guardarButton.setVisible(true);
                nombreReunion.setText(this.cPres.getNombreReunion());

                String txt = "\n";
                String[][] sResult = this.cPres.consultarResultados();
                this.result = sResult;
                for (int i = 0; i < sResult.length; i++) {
                    boolean first = true;
                    txt += " ";
                    txt += sResult[i][0];
                    txt += ": ";
                    for (int j = 1; j < sResult[i].length; j++) {
                        if (!first) {
                            txt += "--> ";
                        }
                        txt += sResult[i][j];
                        txt += " ";
                        first = false;
                    }
                    txt += "\n\n";
                }
                resultTextArea.setText(txt);
            }
        }
    }

    void eliminaResultados() {
        resultTextArea.setText("");
        this.guardarButton.setVisible(false);
    }

    void borrarTituloReunion() {
        nombreReunion.setText("");
        this.guardarButton.setVisible(false);
    }
}
