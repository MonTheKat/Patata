package Presentacio;

import javax.swing.JOptionPane;

/**
 * @autor Víctor
 * @dataCreación 5/12/2014
 * @dataÚltimaModificación 12/12/2014
 */
public class VistaMapaIntroducirParams extends javax.swing.JPanel {

    private CtrlPresentacio cPres;
    private int nuevoCiudadesIntroducir = 0;
    private String nombreMapa;
    private String[][] mapCiudades;
    private String[][] mapCaminos;
    private String[][] mapPesos;
    private int nCiudadActual = 0;
    private int nCaminosIntroducir = 0;
    private int nCaminosActual = 0;

    /**
     * Creates new form VistaMapaNuevo
     */
    public VistaMapaIntroducirParams() {
        initComponents();
    }

    /**
     * Creates new form VistaMapaNuevo
     */
    public VistaMapaIntroducirParams(CtrlPresentacio cpres) {
        this.cPres = cpres;
        initComponents();
        initVisibles();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popupMenu1 = new java.awt.PopupMenu();
        popupMenu2 = new java.awt.PopupMenu();
        popupMenu3 = new java.awt.PopupMenu();
        labelNumeroCiudades1 = new javax.swing.JLabel();
        textNumeroCiudades1 = new javax.swing.JTextField();
        enviarDatosParametros1 = new javax.swing.JButton();
        textNomMapa1 = new javax.swing.JLabel();
        textNombreMapa1 = new javax.swing.JTextField();
        textNombreCiudad2 = new javax.swing.JLabel();
        idCiudadActual2 = new javax.swing.JLabel();
        insertNomCiudad2 = new javax.swing.JTextField();
        enviar2 = new javax.swing.JButton();
        labelInfoCaminos34 = new javax.swing.JLabel();
        enviar3 = new javax.swing.JButton();
        textNCaminos3 = new javax.swing.JTextField();
        labelNCaminos3 = new javax.swing.JLabel();
        idCamino4 = new javax.swing.JLabel();
        enviar4 = new javax.swing.JButton();
        listOrigen4 = new java.awt.List();
        listDestino4 = new java.awt.List();
        seleccionadoOrigen4 = new javax.swing.JLabel();
        seleccionadoDestino4 = new javax.swing.JLabel();
        labeltiempo4 = new javax.swing.JLabel();
        tiempo4 = new javax.swing.JTextField();
        labelkilometros4 = new javax.swing.JLabel();
        kilometros4 = new javax.swing.JTextField();
        labelprecio4 = new javax.swing.JLabel();
        precio4 = new javax.swing.JTextField();

        popupMenu1.setLabel("popupMenu1");

        popupMenu2.setLabel("popupMenu2");

        popupMenu3.setLabel("popupMenu3");

        labelNumeroCiudades1.setText("¿Cuantás ciudades quieres introducir?");

        textNumeroCiudades1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textNumeroCiudades1ActionPerformed(evt);
            }
        });

        enviarDatosParametros1.setText("Enviar");
        enviarDatosParametros1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enviarDatosParametros1ActionPerformed(evt);
            }
        });

        textNomMapa1.setText("Nombre del Mapa:");

        textNombreCiudad2.setText("Nombre Pueblo:  ");

        idCiudadActual2.setText("1");

        insertNomCiudad2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertNomCiudad2ActionPerformed(evt);
            }
        });

        enviar2.setText("Enviar");
        enviar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enviar2ActionPerformed(evt);
            }
        });

        labelInfoCaminos34.setText("Informacion Caminos");

        enviar3.setText("Enviar");
        enviar3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enviar3ActionPerformed(evt);
            }
        });

        labelNCaminos3.setText("Nº Caminos:");

        idCamino4.setText("1");

        enviar4.setText("Enviar");
        enviar4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enviar4ActionPerformed(evt);
            }
        });

        listOrigen4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listOrigen4ActionPerformed(evt);
            }
        });

        listDestino4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listDestino4ActionPerformed(evt);
            }
        });

        labeltiempo4.setText("Tiepo (min)");

        labelkilometros4.setText("Distancia (km)");

        labelprecio4.setText("Precio (euros)");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tiempo4, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(precio4, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(kilometros4, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(enviar4)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(textNCaminos3, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(seleccionadoOrigen4)
                                        .addComponent(listOrigen4, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(labeltiempo4)
                                        .addGap(29, 29, 29)
                                        .addComponent(labelkilometros4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(labelprecio4)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addComponent(enviar3)
                        .addGap(22, 22, 22))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(textNumeroCiudades1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(enviarDatosParametros1))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(insertNomCiudad2, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(textNombreCiudad2)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(idCiudadActual2)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(enviar2))
                                    .addComponent(textNomMapa1, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelNumeroCiudades1, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textNombreMapa1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(24, 24, 24))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(seleccionadoDestino4)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelInfoCaminos34)
                                .addGap(12, 12, 12)
                                .addComponent(idCamino4, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(listDestino4, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelNCaminos3))))
                        .addContainerGap(178, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textNomMapa1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textNombreMapa1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelNumeroCiudades1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textNumeroCiudades1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(enviarDatosParametros1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(idCiudadActual2)
                    .addComponent(textNombreCiudad2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insertNomCiudad2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(enviar2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelInfoCaminos34)
                    .addComponent(enviar3)
                    .addComponent(textNCaminos3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelNCaminos3)
                    .addComponent(idCamino4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(seleccionadoOrigen4)
                    .addComponent(seleccionadoDestino4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(listDestino4, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                    .addComponent(listOrigen4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labeltiempo4)
                    .addComponent(labelkilometros4)
                    .addComponent(labelprecio4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tiempo4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(precio4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(kilometros4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(enviar4))
                .addGap(75, 75, 75))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void textNumeroCiudades1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textNumeroCiudades1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textNumeroCiudades1ActionPerformed

    private void enviarDatosParametros1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enviarDatosParametros1ActionPerformed
        boolean nomMapaV = (!textNombreMapa1.getText().equals(""));
        boolean numCiudadesV = ((!textNumeroCiudades1.getText().equals("")) && (isNumeric(textNumeroCiudades1.getText())) && Integer.parseInt(textNumeroCiudades1.getText()) >= 3);
        if (nomMapaV) {
            if (numCiudadesV) {
                if (this.cPres.hayMapaCargado()) {
                    this.cPres.reinicioTotal();
                    JOptionPane.showMessageDialog(null, "Se ha eliminado el mapa que había cargado");
                }
                nuevoCiudadesIntroducir = Integer.parseInt(textNumeroCiudades1.getText());
                mapCiudades = new String[nuevoCiudadesIntroducir][2];
                nombreMapa = textNombreMapa1.getText();
                labelNumeroCiudades1.setVisible(false);
                textNumeroCiudades1.setVisible(false);
                textNombreMapa1.setVisible(false);
                textNomMapa1.setVisible(false);
                textNumeroCiudades1.setVisible(false);
                enviarDatosParametros1.setVisible(false);
                textNombreCiudad2.setVisible(true);
                idCiudadActual2.setVisible(true);
                insertNomCiudad2.setVisible(true);
                enviar2.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(null, "Introduce un número de pueblos válido. Tiene que haber 3 como mínimo");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Introduce el Nombre del Mapa");
        }

    }//GEN-LAST:event_enviarDatosParametros1ActionPerformed

    private void enviar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enviar2ActionPerformed
        if (nCiudadActual <= nuevoCiudadesIntroducir) {
            if (insertNomCiudad2.getText().length() > 0) {
                mapCiudades[nCiudadActual][0] = Integer.toString(nCiudadActual);
                mapCiudades[nCiudadActual][1] = insertNomCiudad2.getText();
                ++nCiudadActual;

                if (nCiudadActual == nuevoCiudadesIntroducir) {
                    JOptionPane.showMessageDialog(null, "Has introducido los pueblos correctamente");
                    textNombreCiudad2.setVisible(false);
                    idCiudadActual2.setVisible(false);
                    insertNomCiudad2.setVisible(false);
                    enviar2.setVisible(false);
                    labelInfoCaminos34.setVisible(true);
                    labelNCaminos3.setVisible(true);
                    enviar3.setVisible(true);
                    textNCaminos3.setVisible(true);
                    for (int i = 0; i < mapCiudades.length; ++i) {
                        for (int j = 0; j < mapCiudades[0].length; ++j) {
                            System.out.print(mapCiudades[i][j] + " ");
                        }
                        System.out.println("");
                    }
                    System.out.println("");

                } else {
                    idCiudadActual2.setText(Integer.toString(nCiudadActual + 1));
                }

                insertNomCiudad2.setText("");

            } else {
                JOptionPane.showMessageDialog(null, "Escribe el nombre del pueblo");
            }

        }


    }//GEN-LAST:event_enviar2ActionPerformed

    private void insertNomCiudad2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertNomCiudad2ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_insertNomCiudad2ActionPerformed

    private void enviar3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enviar3ActionPerformed

        if (((textNCaminos3.getText() != null) && (isNumeric(textNCaminos3.getText()))) && Integer.parseInt(textNCaminos3.getText()) >= 1) {
            int vertices = this.mapCiudades.length;
            int nAristasPosibles = (vertices * (vertices - 1)) / 2;
            System.out.println(Integer.parseInt(textNCaminos3.getText()) + "<=" + nAristasPosibles);

            if (Integer.parseInt(textNCaminos3.getText()) <= nAristasPosibles) {
                this.nCaminosIntroducir = Integer.parseInt(textNCaminos3.getText());
                mapCaminos = new String[nCaminosIntroducir][5];
                mapPesos = new String[nCaminosIntroducir][3];
                idCamino4.setVisible(true);
                enviar4.setVisible(true);
                labelNCaminos3.setVisible(false);
                textNCaminos3.setVisible(false);
                enviar3.setVisible(false);
                listOrigen4.setVisible(true);
                listDestino4.setVisible(true);
                seleccionadoDestino4.setVisible(true);
                seleccionadoOrigen4.setVisible(true);
                labeltiempo4.setVisible(true);
                labelkilometros4.setVisible(true);
                labelprecio4.setVisible(true);
                tiempo4.setVisible(true);
                kilometros4.setVisible(true);
                precio4.setVisible(true);
                for (int i = 0; i < nuevoCiudadesIntroducir; ++i) {
                    listOrigen4.add(mapCiudades[i][1], Integer.parseInt(mapCiudades[i][0]));
                    listDestino4.add(mapCiudades[i][1], Integer.parseInt(mapCiudades[i][0]));
                }
            } else {
                JOptionPane.showMessageDialog(null, "Con el número de pueblos seleccionado no pueden haber tantos caminos");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Escribe un número de caminos válido. Tiene que haber como mínimo 1");
        }

    }//GEN-LAST:event_enviar3ActionPerformed

    private void enviar4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enviar4ActionPerformed
        System.out.println(nCaminosIntroducir);
        if (nCaminosActual < nCaminosIntroducir) {
            if (isNumeric(tiempo4.getText()) && isNumeric(kilometros4.getText()) && isNumeric(precio4.getText()) && Integer.parseInt(tiempo4.getText()) >= 0 && Integer.parseInt(kilometros4.getText()) >= 0 && Integer.parseInt(precio4.getText()) >= 0) {
                if (listOrigen4.getSelectedItem() != null && listDestino4.getSelectedItem() != null) {
                    System.out.println("origen: " + listOrigen4.getSelectedIndex() + " destino: " + listDestino4.getSelectedIndex());
                    if (compruebaPosibleCamino(nCaminosActual, Integer.toString(listOrigen4.getSelectedIndex()), Integer.toString(listDestino4.getSelectedIndex()))) {
                        mapCaminos[nCaminosActual][0] = Integer.toString(nCaminosActual);
                        mapCaminos[nCaminosActual][1] = "camino" + nCaminosActual;
                        mapCaminos[nCaminosActual][2] = Integer.toString(listOrigen4.getSelectedIndex());
                        mapCaminos[nCaminosActual][3] = Integer.toString(listDestino4.getSelectedIndex());
                        mapCaminos[nCaminosActual][4] = "1";

                        mapPesos[nCaminosActual][0] = tiempo4.getText();
                        mapPesos[nCaminosActual][1] = kilometros4.getText();
                        mapPesos[nCaminosActual][2] = precio4.getText();
                        listOrigen4.deselect(listOrigen4.getSelectedIndex());
                        listDestino4.deselect(listDestino4.getSelectedIndex());
                        ++nCaminosActual;
                        idCamino4.setText(Integer.toString(nCaminosActual + 1));
                        if (nCaminosActual == nCaminosIntroducir) {
                            this.cPres.crearMapaConTodosParametros(nombreMapa, mapCiudades, mapCaminos, mapPesos);
                            JOptionPane.showMessageDialog(null, "El mapa se ha creado correctamente");

                            labelNumeroCiudades1.setVisible(false);
                            textNumeroCiudades1.setVisible(false);
                            textNombreMapa1.setVisible(false);
                            textNomMapa1.setVisible(false);
                            textNumeroCiudades1.setVisible(false);
                            enviarDatosParametros1.setVisible(false);
                            textNombreCiudad2.setVisible(false);
                            idCiudadActual2.setVisible(false);
                            insertNomCiudad2.setVisible(false);
                            enviar2.setVisible(false);
                            labelInfoCaminos34.setVisible(false);
                            labelNCaminos3.setVisible(false);
                            enviar3.setVisible(false);
                            textNCaminos3.setVisible(false);
                            idCamino4.setVisible(false);
                            enviar4.setVisible(false);
                            listOrigen4.setVisible(false);
                            listDestino4.setVisible(false);
                            seleccionadoDestino4.setVisible(false);
                            seleccionadoOrigen4.setVisible(false);
                            labeltiempo4.setVisible(false);
                            labelkilometros4.setVisible(false);
                            labelprecio4.setVisible(false);
                            tiempo4.setVisible(false);
                            kilometros4.setVisible(false);
                            precio4.setVisible(false);
                            
                            this.cPres.avisoMapaCreado();
                        }

                    } else {
                        JOptionPane.showMessageDialog(null, "No pueden haber 2 caminos entre 2 pueblos ni caminos que salen y llegan al mismo pueblo");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Por favor, escoge un origen y un destino");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Introduce el tiempo, los kilometros y el coste del billete correctamente. Tienen que ser positivos");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Ya tienes todos los caminos introducidos. No intentes introducir mas");
        }
    }//GEN-LAST:event_enviar4ActionPerformed

    private void listOrigen4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listOrigen4ActionPerformed
        // TODO add your handling code here:
        seleccionadoOrigen4.setText(listOrigen4.getSelectedItem());

    }//GEN-LAST:event_listOrigen4ActionPerformed

    private void listDestino4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listDestino4ActionPerformed
        // TODO add your handling code here:
        seleccionadoDestino4.setText(listDestino4.getSelectedItem());
    }//GEN-LAST:event_listDestino4ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton enviar2;
    private javax.swing.JButton enviar3;
    private javax.swing.JButton enviar4;
    private javax.swing.JButton enviarDatosParametros1;
    private javax.swing.JLabel idCamino4;
    private javax.swing.JLabel idCiudadActual2;
    private javax.swing.JTextField insertNomCiudad2;
    private javax.swing.JTextField kilometros4;
    private javax.swing.JLabel labelInfoCaminos34;
    private javax.swing.JLabel labelNCaminos3;
    private javax.swing.JLabel labelNumeroCiudades1;
    private javax.swing.JLabel labelkilometros4;
    private javax.swing.JLabel labelprecio4;
    private javax.swing.JLabel labeltiempo4;
    private java.awt.List listDestino4;
    private java.awt.List listOrigen4;
    private java.awt.PopupMenu popupMenu1;
    private java.awt.PopupMenu popupMenu2;
    private java.awt.PopupMenu popupMenu3;
    private javax.swing.JTextField precio4;
    private javax.swing.JLabel seleccionadoDestino4;
    private javax.swing.JLabel seleccionadoOrigen4;
    private javax.swing.JTextField textNCaminos3;
    private javax.swing.JLabel textNomMapa1;
    private javax.swing.JLabel textNombreCiudad2;
    private javax.swing.JTextField textNombreMapa1;
    private javax.swing.JTextField textNumeroCiudades1;
    private javax.swing.JTextField tiempo4;
    // End of variables declaration//GEN-END:variables

    private boolean isNumeric(String str) {
        return (str.matches("[+-]?\\d*(\\.\\d+)?") && str.equals("") == false);
    }

    private boolean compruebaPosibleCamino(int nCaminosActual, String origen, String destino) {
        boolean posible = true;
        if (origen.equals(destino)) {
            posible = false;
        } else {
            for (int i = 0; i < nCaminosActual; ++i) {
                if (mapCaminos[i][2].equals(origen) && mapCaminos[i][3].equals(destino)) {
                    posible = false;
                }
                if (mapCaminos[i][2].equals(destino) && mapCaminos[i][3].equals(origen)) {
                    posible =  false;
                }
            }
        }
        return posible;
    }

    public void initVisibles() {
        labelNumeroCiudades1.setVisible(true);
        textNumeroCiudades1.setVisible(true);
        textNombreMapa1.setVisible(true);
        textNomMapa1.setVisible(true);
        textNumeroCiudades1.setVisible(true);
        enviarDatosParametros1.setVisible(true);
        textNombreCiudad2.setVisible(false);
        idCiudadActual2.setVisible(false);
        insertNomCiudad2.setVisible(false);
        enviar2.setVisible(false);
        labelInfoCaminos34.setVisible(false);
        labelNCaminos3.setVisible(false);
        enviar3.setVisible(false);
        textNCaminos3.setVisible(false);
        idCamino4.setVisible(false);
        enviar4.setVisible(false);
        listOrigen4.setVisible(false);
        listDestino4.setVisible(false);
        seleccionadoDestino4.setVisible(false);
        seleccionadoOrigen4.setVisible(false);
        labeltiempo4.setVisible(false);
        labelkilometros4.setVisible(false);
        labelprecio4.setVisible(false);
        tiempo4.setVisible(false);
        kilometros4.setVisible(false);
        precio4.setVisible(false);
        
        idCamino4.setText("1");
        idCiudadActual2.setText("1");
        insertNomCiudad2.setText("");
        kilometros4.setText("");
        tiempo4.setText("");
        precio4.setText("");
        textNCaminos3.setText("");
        textNombreMapa1.setText("");
        textNumeroCiudades1.setText("");
        
        this.nuevoCiudadesIntroducir = 0;
        this.nombreMapa = "";
        this.mapCiudades = null;
        this.mapCaminos = null;
        this.mapPesos = null;
        this.nCiudadActual = 0;
        this.nCaminosIntroducir = 0;
        this.nCaminosActual = 0;
        
        listDestino4.removeAll();
        listOrigen4.removeAll();
    }
}
